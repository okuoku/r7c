Base types
==========

 Booleans "6.3. Booleans"
 ------------------------
  Zone0-1 = true
  Zone1-2 = false

 R7RS:
  (not obj)
  (boolean? obj)
 CORE:
  (boolean=?/2 boolean1 boolean2)
  (true)
  (false)
 VMIF:
  (%if obj a b) ::: syntax
  (boolean w0) 

 Fixnums(Based on R6RS)
 ----------------------

 CORE:
  (fixnum? x)
  (fx+ x y)
  (fx- x y)
  (fx<? x y)
  (fx>? x y)
  (fx<=? x y)
  (fx>=? x y)
  (fx=? x y)
 VMIF:
  (fixnum w)
  (fixnum-value w)

 Pairs "6.4. Pairs and lists"
 ----------------------------
  Zone0-3 = '()
  Vector-1 = pair

 R7RS:
  (pair? obj)
  (cons obj1 obj2)
  (car pair)
  (cdr pair)
  (set-car! pair obj)
  (set-cdr! pair obj)
  (null? obj)
 VMIF:
  (null)

 Characters "6.6. Characters"
 ----------------------------
  Zone1-1 = Char

 R7RS:
  (char? obj)
  (char->integer char)
  (integer->char n)

 CORE:
  (char=?/2 char1 char2)
  (char<?/2 char1 char2)
  (char>?/2 char1 char2)
  (char<=?/2 char1 char2)
  (char>=?/2 char1 char2)

 Vectors "6.8. Vectors"
 ----------------------
  Vector-2 = vector
 
 R7RS:
  (vector? obj)
  (vector-length vector)
  (vector-ref vector k)
  (vector-set! vector k obj)

 CORE:
  (make-vector/undefined k)
  (vector-copy/1 vector)

 Strings "6.7. Strings"
 ----------------------
  Vector-6 = string

 R7RS:
  (string? obj)
  (string-length string)
  (string-ref string k)
  (string-set! string k char)

 CORE:
  (make-string/undefined k)
  (string-copy/1 string)


 Symbols "6.5. Symbols"
 ----------------------
  Vector-5 = symbols

 R7RS:
  (symbol? obj)
  (symbol->string symbol)
 CORE:
  (symbol=?/2 symbol1 symbol2)
  (string->symbol/uninterned string)


 Bytevectors "6.9. Bytevectors"
 ------------------------------
  Buffer-1 = bytevector

 R7RS:
  (bytevector? obj)
  (bytevector-length bytevector)
  (bytevector-u8-ref bytevector k)
  (bytevector-u8-set! bytevector k byte)

 CORE:
  (make-bytevector/undefined k byte)
  (bytevector-copy/1 bytevector)

